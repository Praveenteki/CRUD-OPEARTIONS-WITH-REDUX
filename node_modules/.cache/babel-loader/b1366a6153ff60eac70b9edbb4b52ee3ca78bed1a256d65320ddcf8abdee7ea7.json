{"ast":null,"code":"var _jsxFileName = \"/home/praveent/reduxproject/src/UserReducer.jsx\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { UserList } from \"./Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userSlice = createSlice({\n  name: \"name\",\n  initialState: UserList,\n  reducers: {\n    addUser: (state, action) => {\n      state.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const {\n        id,\n        name,\n        email\n      } = action.payload;\n      const uu = state.find(user => user.id === id);\n      if (uu) {\n        uu.name = name;\n        uu.email = email;\n      }\n    },\n    deleteUser: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const uu = state.find(user => user.id === id);\n      if (uu) {\n        return /*#__PURE__*/_jsxDEV(\"state\", {\n          className: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }\n});\nexport const {\n  addUser,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","UserList","jsxDEV","_jsxDEV","userSlice","name","initialState","reducers","addUser","state","action","push","payload","updateUser","id","email","uu","find","user","deleteUser","className","fileName","_jsxFileName","lineNumber","columnNumber","actions","reducer"],"sources":["/home/praveent/reduxproject/src/UserReducer.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { UserList } from \"./Data\";\n\nconst userSlice  = createSlice({\n    name : \"name\" , \n    initialState : UserList,\n     reducers : {\n          addUser :(state ,action) =>{\n           state.push(action.payload)\n          },\n          updateUser : (state , action) => { \n            const {id ,name ,email} = action.payload;\n             const uu = state.find(user => user.id === id);\n             if (uu){\n                uu.name = name;\n                uu.email = email;\n             }\n          },\n          deleteUser : (state , action) => { \n            const {id} = action.payload;\n             const uu = state.find(user => user.id === id);\n             if (uu){\n                 return <state className=\"filter\"></state>\n             }\n          }\n     }\n})\n\nexport const {addUser ,updateUser} = userSlice.actions\nexport  default userSlice.reducer;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAIJ,WAAW,CAAC;EAC3BK,IAAI,EAAG,MAAM;EACbC,YAAY,EAAGL,QAAQ;EACtBM,QAAQ,EAAG;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAI;MAC1BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC3B,CAAC;IACDC,UAAU,EAAGA,CAACJ,KAAK,EAAGC,MAAM,KAAK;MAC/B,MAAM;QAACI,EAAE;QAAET,IAAI;QAAEU;MAAK,CAAC,GAAGL,MAAM,CAACE,OAAO;MACvC,MAAMI,EAAE,GAAGP,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAC7C,IAAIE,EAAE,EAAC;QACJA,EAAE,CAACX,IAAI,GAAGA,IAAI;QACdW,EAAE,CAACD,KAAK,GAAGA,KAAK;MACnB;IACH,CAAC;IACDI,UAAU,EAAGA,CAACV,KAAK,EAAGC,MAAM,KAAK;MAC/B,MAAM;QAACI;MAAE,CAAC,GAAGJ,MAAM,CAACE,OAAO;MAC1B,MAAMI,EAAE,GAAGP,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAC7C,IAAIE,EAAE,EAAC;QACH,oBAAOb,OAAA;UAAOiB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAC7C;IACH;EACL;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAChB,OAAO;EAAEK;AAAU,CAAC,GAAGT,SAAS,CAACqB,OAAO;AACtD,eAAgBrB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}